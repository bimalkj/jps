unit frmFeeU;

interface

uses
  Windows, Messages, SysUtils, Classes, Graphics, Controls, Forms, Dialogs,
  ExtCtrls,DBCtrls, StdCtrls, Mask, Grids, DBGrids, Buttons,variants,inifiles,
  DB, DBTables, MemDS, DBAccess, MyAccess;

type
  TfrmFee = class(TForm)
    Label1: TLabel;
    DBEdit1: TDBEdit;
    Label2: TLabel;
    DBEdit2: TDBEdit;
    Label3: TLabel;
    DBEdit3: TDBEdit;
    DBCheckBox1: TDBCheckBox;
    Label8: TLabel;
    DBEdit8: TDBEdit;
    DBNavigator1: TDBNavigator;
    Label9: TLabel;
    DBLookupComboBox1: TDBLookupComboBox;
    Label11: TLabel;
    Label4: TLabel;
    DBGrid1: TDBGrid;
    btnAuto: TBitBtn;
    DBText1: TDBText;
    Label10: TLabel;
    DBText2: TDBText;
    DBText3: TDBText;
    Label12: TLabel;
    DBEdit4: TDBEdit;
    Label13: TLabel;
    DBEdit5: TDBEdit;
    Label5: TLabel;
    btnSave: TBitBtn;
    btnNew: TBitBtn;
    btnPreview: TBitBtn;
    btnPrint: TBitBtn;
    GroupBox1: TGroupBox;
    Label6: TLabel;
    Label7: TLabel;
    DBEdit6: TDBEdit;
    DBLookupComboBox2: TDBLookupComboBox;
    DBLookupComboBox3: TDBLookupComboBox;
    DBEdit7: TDBEdit;
    Label14: TLabel;
    Label15: TLabel;
    DBEdit9: TDBEdit;
    Label16: TLabel;
    btnInfo: TSpeedButton;
    Label18: TLabel;
    DBLookupComboBox4: TDBLookupComboBox;
    RdGp2: TDBRadioGroup;
    CBx1: TComboBox;
    edtSearch: TEdit;
    btnSearch: TBitBtn;
    Query1: TMyQuery;
    Query1studid: TFloatField;
    Query1name: TStringField;
    Query1MR_NO: TStringField;
    procedure btnAutoClick(Sender: TObject);
    procedure FormActivate(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure btnNewClick(Sender: TObject);
    procedure btnSaveClick(Sender: TObject);
    procedure DBCheckBox1Click(Sender: TObject);
    procedure btnPreviewClick(Sender: TObject);
    procedure btnInfoClick(Sender: TObject);
    procedure btnSearchClick(Sender: TObject);
    procedure edtSearchChange(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

const mstr:array[1..12] of string=('JAN','FEB','MAR','APR',
                                   'MAY','JUN','JUL','AUG',
                                   'SEP','OCT','NOV','DEC');
      sstr:array[1..12] of string=('APR','MAY','JUN','JUL',
                                   'AUG','SEP','OCT','NOV',
                                   'DEC','JAN','FEB','MAR');
var
  frmFee: TfrmFee;
  saddr,sname:string;


implementation

uses mydataU, frmPreviewU, genperfU, myfuncU;

{$R *.DFM}

procedure TfrmFee.btnAutoClick(Sender: TObject);
var
acno:real;
code:integer;
yr,month,day:Word;
begin
if Mydata.tbfeeStudID.IsNull then
  raise exception.Create('Student ID not selected');
mydata.tbFeeDetail.DisableControls;
try
  mydata.myconn.StartTransaction;
  mydata.qryFee.Close;
  mydata.QryFee.Filtered:=False;
  if mydata.StudMast.Locate('StudId',Mydata.tbfeeStudID.Value,[])then
  if mydata.StudMastNOTERMS.Value<>-1 then
    begin
    if mydata.StudMastNOTERMS.value>0 then
      mydata.QryFee.Filter:='AC_MODE=''T'''
    else
      mydata.QryFee.Filter:='AC_MODE<>''I''';
    mydata.QryFee.Filtered:=True;
    end;
  //showmessage(mydata.qryFee.Filter);
  mydata.QryFee.open;
  mydata.QryFee.First;
  code:=mydata.tbfeeFEE_PROF_CODE.asinteger;
  while not mydata.tbFeeDetail.eof do mydata.tbFeeDetail.Delete;
  while not mydata.QryFee.eof do
    begin
    //Showmessage(floattostr(mydata.QryFeeAc_NO.value));
    acno:=mydata.QryFeeAc_NO.value;
    if mydata.tbFeeMatrix.locate('Ac_NO;FEE_PROF_CODE',varArrayOf([acno,code]),[loPartialKey])
    then begin
      //showmessage('Found');
      mydata.tbFeeDetail.insert;
      mydata.tbFeeDetailAc_NO.value:=acno;
      if mydata.qryFeeac_mode.Value='T' then
        mydata.tbFeeDetailAc_amt.value:=mydata.tbFeeMatrixFee.value*mydata.tbfeenoterm.Value
      else
        mydata.tbFeeDetailAc_amt.value:=mydata.tbFeeMatrixFee.value;
      mydata.tbFeeDetail.post;
      end;
    mydata.qryFee.next;
    end;
//if mydata.StudMast.Locate('StudId',mydata.tbfeeStudID.Value,[])then

  if mydata.StudMastByBus.Value =true then
        // 12 is the code for Bus fee
    if mydata.tbFeeMatrix.locate('Ac_NO;FEE_PROF_CODE',varArrayOf([12,code]),[loPartialKey])
    then begin
      mydata.tbFeeDetail.insert;
      mydata.tbFeeDetailAc_NO.value:=12;
      mydata.tbFeeDetailAc_amt.value:=mydata.tbFeeMatrixFee.value*mydata.tbfeenoterm.Value;
      mydata.tbFeeDetail.post;
      end;
    DecodeDate(mydata.tbfeeMR_DATE.Value,yr,month,day);
    if day>25 then
         // 13 is the code for Late Payment fee
    if mydata.tbFeeMatrix.locate('Ac_NO;FEE_PROF_CODE',varArrayOf([13,code]),[loPartialKey])
    then begin
      mydata.tbFeeDetail.insert;
      mydata.tbFeeDetailAc_NO.value:=13;
      mydata.tbFeeDetailAc_amt.value:=mydata.tbFeeMatrixFee.value*mydata.tbfeenoterm.Value;
      mydata.tbFeeDetail.post;
      end;
  mydata.myconn.commit;
  except on E:Exception do
    begin
    showmessage(e.Message);
    mydata.myconn.Rollback;
    end;
  end;//for try block
mydata.tbFeeDetail.EnableControls;
end;




procedure TfrmFee.FormActivate(Sender: TObject);
begin
with mydata do
begin
//ClMast.open;
actlstds:=tbFee;
//StudMast.Filter:='Catcode=1';
Studmast.open;
//StudMast.Filtered:=true;
tbBmast.open;
tbBrmast.open;
tbFee.open;
tbFeeDetail.open;
tbAcMaster.open;
tbFeeMatrix.open;
RdBtnValT.Open;
end;
RdGp2.ItemIndex:=0;
RdGp2.Value:='MR_NO';
dbedit2.Text :=datetostr(date);
end;


procedure TfrmFee.FormClose(Sender: TObject; var Action: TCloseAction);
begin
edtSearch.Text:='';
Query1.Close;
with mydata do
begin
//ClMast.close;
StudMast.close;
//StudMast.Filtered:=false;
tbBmast.close;
tbBrmast.close;
tbFee.close;
tbFeeDetail.close;
tbAcMaster.close;
tbFeeMatrix.close;
RdBtnValT.close;
actlstds:=dummyT;
end;
end;

procedure TfrmFee.btnNewClick(Sender: TObject);
begin
mydata.tbfee.Insert;
end;

procedure TfrmFee.btnSaveClick(Sender: TObject);
begin
mydata.tbfee.post;
end;

procedure TfrmFee.DBCheckBox1Click(Sender: TObject);
begin
GroupBox1.visible:=not DBCheckBox1.Checked;
end;

procedure TfrmFee.btnPreviewClick(Sender: TObject);
var sl:integer;
tmpstr:string;
begin
sl:=0;
with frmPreview.Memo1 do
        begin
        Clear;
        Lines.Add(chr(14)+padc(genperf.edit1.text,32));
        Lines.Add(chr(14)+padc(genperf.Memo1.text,32));
        Lines.Add('Date :'+padl(mydata.tbfeeMR_DATE.AsString,80));
        tmpstr:=sstr[mydata.tbfeeTERM.value];
        if mydata.tbfeeNOTERM.value>1 then
        tmpstr:=sstr[mydata.tbfeeTERM.asinteger-mydata.tbfeeNOTERM.asinteger+1]+'-'+tmpstr;
        Lines.Add(format('Rec No.: %s for the month of %s',
        [mydata.tbfeeDetailMR_NO.value,tmpstr]));
        Lines.Add('');
        Lines.Add(format('%7s %15s %15s %15s',['Stud Id','Stud Name','Standard','Section']));
        Lines.Add(format('%5s %15s %15s %15s',[mydata.tbFeestudId.Asstring,mydata.tbFeeStudName.AsString,mydata.tbFeecldesc.AsString,mydata.tbFeesec.AsString]));
                 Lines.Add(repchar('-',60));
                 Lines.Add(format('%9s %-25s %15s',['Sl No.','Description','Amount']));
                 Lines.Add(repchar('-',60));
                 mydata.tbfeeDetail.first;
                 while not mydata.tbfeeDetail.Eof do
                 begin
                 inc(sl);
                 Lines.Add(format('%9d %-25s %15.2f',[sl,mydata.tbFeeDetailAC_NAME.ASString,
                 mydata.tbfeeDetailAC_AMTPAID.Value]));
                 mydata.tbfeeDetail.Next;
                 end;
                 Lines.Add(repchar('-',60));
                Lines.add('Total Amount :'+DBedit5.Text);
                Lines.add(numtoword(mydata.tbfeeFEE_AMT.value));
                Lines.add('');
                Lines.Add(chr(14)+padc(genperf.Memo2.text,32));

        end;
        if sender=btnPreview then
        frmPreview.ShowModal
        else frmPreview.btnPrintClick(self);

end;

procedure TfrmFee.btnInfoClick(Sender: TObject);
var
tmpstr:string;
begin
frmpreview.Memo1.Lines.Clear;
frmpreview.Memo1.Lines.add(
        format('%7s %5s %15s %15s',
        ['Month','RecNo','Date','Amount']));
frmpreview.Memo1.Lines.add(repchar('-',52));
with mydata do
begin
qrStudHist.Params[0].Value:=tbfeeStudID.value;
qrStudHist.open;
qrStudHist.first;

while not qrstudhist.Eof do
        begin
        tmpstr:=sstr[qrstudhistTerm.asinteger];
        if qrstudhistnoterm.value>1 then
        tmpstr:=sstr[mydata.qrstudhistTERM.asinteger-mydata.qrstudhistNOTERM.asinteger+1]+'-'+tmpstr;
        frmpreview.Memo1.Lines.add(
        format('%7s %12S %15s %15.2f',
        [tmpstr,qrstudhistMR_NO.AsString,
        qrstudhistMR_DATE.asstring,
        qrstudhistTamt.value]));
        qrstudhist.Next;
        end;
qrStudHist.close
end;
frmpreview.ShowModal;
end;

procedure TfrmFee.btnSearchClick(Sender: TObject);
begin
if not Query1.Active then
begin
 Query1.Open; Query1.First;
end;
if edtSearch.Text<>'' then
begin
 if not Query1.IsEmpty then
 begin
  if not Query1.Eof then
  begin MyData.tbfee.Locate('MR_NO',Query1MR_NO.Value,[]);Query1.Next;end
  else
  begin  Showmessage('No more matches');edtSearch.Text:='';Query1.Close;end;
 end
 else
 begin  Showmessage('Not found');edtSearch.Text:='';Query1.Close;end;
end
else  Showmessage('Enter search string!');
end;

procedure TfrmFee.edtSearchChange(Sender: TObject);
begin
 Query1.Close; Query1.SQL[5]:=rdgp2.Value;
 if CBx1.Text='=' then
  Query1.Params[0].AsString:=UpperCase(edtSearch.Text)
 else
  Query1.Params[0].AsString:='%'+UpperCase(edtSearch.Text)+'%';
end;

end.
